name: CI-Python

on: [push, pull_request]

jobs:
  CI-Python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: poetry install

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root

      - name: Run tests
        run: poetry run pytest

      # カバレッジレポートを生成してジョブのサマリーに追加する
      - name: Generage coverage report
        id: generate_coverage_report
        run: |
          poetry run python -m coverage run --source=src/ -m pytest discover
          
          # Job Summaries にカバレッジの概要を設定する
          echo '## Coverage'                   >> ${GITHUB_STEP_SUMMARY}
          echo '```'                           >> ${GITHUB_STEP_SUMMARY}
          poetry run python -m coverage report >> ${GITHUB_STEP_SUMMARY}
          echo '```'                           >> ${GITHUB_STEP_SUMMARY}

          poetry run python -m coverage xml

      # カバレッジレポートをCodecovにアップロードする
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true # アップロードにエラーがあった場合はCIが失敗

      # ジョブのサマリーにCodecovのリンクを設定する
      - name: Set Codecov link to Job Summaries
        run: |
          echo "## Coverage report on Codecov" >> ${GITHUB_STEP_SUMMARY}
          echo "以下のリンクから詳細を確認できます。  " >> ${GITHUB_STEP_SUMMARY}
          echo "https://codecov.io/gh/${GITHUB_REPOSITORY}/commit/$(git rev-parse HEAD)" >> ${GITHUB_STEP_SUMMARY}

      # PythonのコードをPEP8のガイドラインに基づいてチェックするためのツール
      - name: Format check
        run: |
          poetry run python -m pycodestyle src/ tests/
          poetry run python -m pydocstyle src/ tests/
